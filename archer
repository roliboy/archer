#!/bin/bash

detect_boot_mode() {
    [ -d /sys/firmware/efi/efivars ] && echo UEFI || echo BIOS
}

get_drive() {
    dialog --title 'Target drive' \
        --menu 'Select drive:' \
        --output-fd 1 \
        0 0 0 \
        $(
            lsblk -lno NAME,SIZE,TYPE |
            grep disk |
            awk '{ print "/dev/"$1, $2 }' |
            sort -u
        )
}

get_mirrorlist_country() {
    dialog --title 'Mirrorlist' \
        --menu 'Select country: ' \
        --output-fd 1 \
        0 0 0 \
        $(
            curl -s https://www.archlinux.org/mirrorlist/ |
            grep '<option value=".*">.*</option>' |
            awk -F'[<">]' '{ gsub(" ", "-", $5); print $3, $5 }'
        )
}

get_timezone() {
    dialog --title 'Timezone' \
        --menu 'Select timezone: ' \
        --output-fd 1 \
        0 0 0 \
        $(
            for zone in $(ls -F /usr/share/zoneinfo | grep \/$); do
                for region in $(ls /usr/share/zoneinfo/$zone); do
                    echo $zone$region '-';
                done;
            done;
        )
}

get_hostname() {
    dialog --title 'Hostname' --inputbox "Enter hostname: " --output-fd 1 0 0
}

get_username() {
    dialog --title 'Username' --inputbox "Enter username: " --output-fd 1 0 0
}

get_password() {
    dialog --title 'Password' --insecure --passwordbox "Enter password: " --output-fd 1 0 0
}

setup() {
    echo [LOG] > archer.log
    boot_mode="$(detect_boot_mode)"
    echo [DEBUG]: boot mode: =$boot_mode= >> archer.log
    selected_drive="$(get_drive)"
    echo [DEBUG]: selected drve: =$selected_drive= >> archer.log
    mirrorlist_country="$(get_mirrorlist_country)"
    echo [DEBUG]: mirrorlist country: =$mirrorlist_country= >> archer.log
    timezone="$(get_timezone)"
    echo [DEBUG]: timezone: =$timezone= >> archer.log
    hostname="$(get_hostname)"
    echo [DEBUG]: hostname: =$hostname= >> archer.log
    username="$(get_username)"
    echo [DEBUG]: username: =$username= >> archer.log
    password="$(get_password)"
    echo [DEBUG]: password: =$password= >> archer.log
}

setup
